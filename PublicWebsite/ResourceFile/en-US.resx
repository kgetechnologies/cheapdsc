<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutUs_ContentLine1" xml:space="preserve">
    <value>Cheap DSC is currently serving all over India serving all pin code in India.</value>
  </data>
  <data name="AboutUs_ContentLine2" xml:space="preserve">
    <value>Cheap DSC "An Award Winning Company" is a licensed Registration Authority under Information Technology Act 2000 of India for issuance of Digital Signature Certificates in India. Cheap DSC is a leading PKI Solutions provider, Digital Signature Certificates, eSign Services, Document Signer Certificate, Code Signing Certificates, Signing Certificates, Encryption Certificates. We are a Chennai based Company established in 2017 with presence on PAN India Basis with 50+ partners. With in a short span of time we are serving people in more then 50 cities and around 30 towns and we are increasing day by day with help of our clients those who get support from us very quickly. We have issued more than 5k DSC till date &amp; having 50+ DSC Associates on PAN India.</value>
  </data>
  <data name="AboutUs_ContentLine3" xml:space="preserve">
    <value>The first step is determining which Cheap DSC relationship best aligns with your company's products, services, expertise and business goals. Cheap DSC programs are available to help you resell our product related to Digital Signature Certificates, FIPS Certified USB Token and many more.</value>
  </data>
  <data name="AboutUs_ContentLine4" xml:space="preserve">
    <value>Cheap DSC believes that partnership and the resulting synergies are the cornerstone of any successful business. Building mutually advantageous relationships that allow sustained business expansion and customer loyalty defines the broad scope of our Partner Program.</value>
  </data>
  <data name="AboutUs_SubTitle" xml:space="preserve">
    <value>Only Place to get all digital Signature Product at cheap price with best service in India.</value>
  </data>
  <data name="AboutUs_Title" xml:space="preserve">
    <value>About Us</value>
  </data>
  <data name="Footer_AllOverIndia" xml:space="preserve">
    <value>All Over India</value>
  </data>
  <data name="Footer_ContactUs" xml:space="preserve">
    <value>Contact Us</value>
  </data>
  <data name="Footer_CopyRights" xml:space="preserve">
    <value>© 2021 cheapdsc.com Designed &amp; Developed by</value>
  </data>
  <data name="Footer_Description" xml:space="preserve">
    <value>One Stop Place for All Digital Signature Certificate, DGFT, Usb Token at cheap price with best service.</value>
  </data>
  <data name="Footer_FollowUsOnSocial" xml:space="preserve">
    <value>Follow Us on Above Social Media Platform</value>
  </data>
  <data name="Footer_HowToReachUs" xml:space="preserve">
    <value>How to Reach Us</value>
  </data>
  <data name="Footer_PrivacyPolicy" xml:space="preserve">
    <value>Privacy policy</value>
  </data>
  <data name="Menu_AboutUs" xml:space="preserve">
    <value>About Us</value>
  </data>
  <data name="Menu_Class3" xml:space="preserve">
    <value>Class 3</value>
  </data>
  <data name="Menu_Combo" xml:space="preserve">
    <value>Combo</value>
  </data>
  <data name="Menu_ComboWithUsbToken" xml:space="preserve">
    <value>Combo With Usb Token</value>
  </data>
  <data name="Menu_ContactUs" xml:space="preserve">
    <value>Contact Us</value>
  </data>
  <data name="Menu_DGFTCertificate" xml:space="preserve">
    <value>DGFT Certificate</value>
  </data>
  <data name="Menu_DGFTWithUsbToken" xml:space="preserve">
    <value>DGFT With Usb Token</value>
  </data>
  <data name="Menu_Encryption" xml:space="preserve">
    <value>Encryption</value>
  </data>
  <data name="Menu_EncryptionWithUsbToken" xml:space="preserve">
    <value>Encryption With Usb Token</value>
  </data>
  <data name="Menu_Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Menu_ImportAndExport" xml:space="preserve">
    <value>Import &amp; Export</value>
  </data>
  <data name="Menu_Individual" xml:space="preserve">
    <value>Individual</value>
  </data>
  <data name="Menu_Organisation" xml:space="preserve">
    <value>Organisation</value>
  </data>
  <data name="Menu_Product" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="Menu_ServicingAreas" xml:space="preserve">
    <value>Servicing Areas</value>
  </data>
  <data name="Menu_Signature" xml:space="preserve">
    <value>Signature</value>
  </data>
  <data name="Menu_SignatureWithToken" xml:space="preserve">
    <value>Signature With Usb Token</value>
  </data>
  <data name="Menu_UsbToken" xml:space="preserve">
    <value>Usb Token</value>
  </data>
</root>